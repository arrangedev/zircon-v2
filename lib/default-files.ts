import { EditorDocument } from "@tutorialkit/components-react/core";
import { stripIndent } from "./hooks/useEditor";

export const DEFAULT_FILES: Record<string, EditorDocument> = {
  "/src/index.ts": {
    filePath: "/src/index.ts",
    loading: false,
    value: stripIndent(`
        document.body.innerHTML = '<h1>Hello, world!</h1>';
      `),
  },
  "/src/index.html": {
    filePath: "/src/index.html",
    loading: false,
    value: stripIndent(`
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Hello, world!</title>
        </head>
        <body>
          <script src="./index.js"></script>
        </body>
        </html>
      `),
  },
  "/src/assets/logo.svg": {
    filePath: "/src/assets/logo.svg",
    loading: false,
    value: stripIndent(`
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <rect width="24" height="24" rx="15" />
        </svg>
      `),
  },
  "/package.json": {
    filePath: "/package.json",
    loading: false,
    value: stripIndent(`
        {
          "name": "hello-world",
          "version": "1.0.0",
          "description": "Hello, world!",
          "main": "index.js",
          "scripts": {
            "start": "servor src/ --reload"
          },
          "dependencies": {
            "servor": "4.0.2",
            "typescript": "^5.2.2",
            "@sqds/multisig": "^2.1.2"
          }
        }
      `),
  },
};

export const ANCHOR_FILES: Record<string, EditorDocument> = {
  "/programs/program/src/lib.rs": {
    filePath: "/programs/program/src/lib.rs",
    loading: false,
    value: stripIndent(`
    use anchor_lang::prelude::*;

    declare_id!("2LqSATEPQhfJeSbE1R52ggm54tQjht2BRnY7sfrQjZK9");
    
    #[program]
    pub mod program {
        use super::*;
    
        pub fn initialize(ctx: Context<Initialize>) -> Result<()> {
            Ok(())
        }
    }
    
    #[derive(Accounts)]
    pub struct Initialize {}
      `),
  },
  "/programs/program/Cargo.toml": {
    filePath: "/programs/program/Cargo.toml",
    loading: false,
    value: stripIndent(`
    [package]
    name = "program"
    version = "0.1.0"
    description = "Generated by Zircon."
    edition = "2021"
    
    [lib]
    crate-type = ["cdylib", "lib"]
    name = "program"
    
    [features]
    no-entrypoint = []
    no-idl = []
    no-log-ix-name = []
    cpi = ["no-entrypoint"]
    default = []
    
    [dependencies]
    anchor-lang = { version = "0.28.0", features = ["init-if-needed"] }
      `),
  },
  "/programs/program/Xargo.toml": {
    filePath: "/programs/program/Xargo.toml",
    loading: false,
    value: stripIndent(`
    [target.bpfel-unknown-unknown.dependencies.std]
    features = []
      `),
  },
  "/tests/index.ts": {
    filePath: "/tests/index.ts",
    loading: false,
    value: stripIndent(`
    import * as anchor from "@coral-xyz/anchor";
    import { Program } from "@coral-xyz/anchor";
    import { Program } from "../target/types/program";
    
    describe("program", () => {
      // Configure the client to use the local cluster.
      anchor.setProvider(anchor.AnchorProvider.env());
    
      const program = anchor.workspace.Program as Program<Program>;
    
      it("Is initialized!", async () => {
        // Add your test here.
        const tx = await program.methods.initialize().rpc();
        console.log("Your transaction signature", tx);
      });
    });
      `),
  },
  "/Cargo.toml": {
    filePath: "/Cargo.toml",
    loading: false,
    value: stripIndent(`
    [workspace]
members = [
    "programs/*"
]

[profile.release]
overflow-checks = true
lto = "fat"
codegen-units = 1
[profile.release.build-override]
opt-level = 3
incremental = false
codegen-units = 1
      `),
  },
  "/Anchor.toml": {
    filePath: "/Anchor.toml",
    loading: false,
    value: stripIndent(`
    [features]
    seeds = false
    skip-lint = false
    [programs.localnet]
    program = "2LqSATEPQhfJeSbE1R52ggm54tQjht2BRnY7sfrQjZK9"
    
    [registry]
    url = "https://api.apr.dev"
    
    [provider]
    cluster = "Localnet"
    wallet = "/Users/zircon/.config/solana/id.json"
    
    [scripts]
    test = "yarn run ts-mocha -p ./tsconfig.json -t 1000000 tests/**/*.ts"
      `),
  },
  "/package.json": {
    filePath: "/package.json",
    loading: false,
    value: stripIndent(`
    {
        "scripts": {
            "lint:fix": "prettier */*.js \"*/**/*{.js,.ts}\" -w",
            "lint": "prettier */*.js \"*/**/*{.js,.ts}\" --check"
        },
        "dependencies": {
            "@coral-xyz/anchor": "^0.28.0"
        },
        "devDependencies": {
            "chai": "^4.3.4",
            "mocha": "^9.0.3",
            "ts-mocha": "^10.0.0",
            "@types/bn.js": "^5.1.0",
            "@types/chai": "^4.3.0",
            "@types/mocha": "^9.0.0",
            "typescript": "^4.3.5",
            "prettier": "^2.6.2"
        }
    }
      `),
  },
  "/tsconfig.json": {
    filePath: "/tsconfig.json",
    loading: false,
    value: stripIndent(`
    {
        "compilerOptions": {
          "types": ["mocha", "chai"],
          "typeRoots": ["./node_modules/@types"],
          "lib": ["es2015"],
          "module": "commonjs",
          "target": "es6",
          "esModuleInterop": true
        }
      }
      `),
  },
};
